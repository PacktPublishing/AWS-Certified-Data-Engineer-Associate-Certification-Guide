AWSTemplateFormatVersion: '2010-09-09'

Description: This template creates the necessary resources for all chapters for PacktPub DAE-C01 certification

Resources:
  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "dea-c01-data-ingestion-bucket-${AWS::AccountId}"
      Tags:
        - Key: Project
          Value: "PacktPub"
        - Key: "Chapter"
          Value: "02"
        - Key: Certification
          Value: "DAE-C01"

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "dea-c01-data-transform-lambda-role-${AWS::AccountId}"
      Description: Lambda Execution Role for Chapter 02
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: LambdaBasicExecution
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: arn:aws:logs:*:*:*
        - PolicyName: DynamoDBAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:PutItem
                  - dynamodb:BatchWriteItem
                  - dynamodb:UpdateItem
                Resource: !GetAtt DynamoDBTable.Arn
      Tags:
        - Key: Project
          Value: "PacktPub"
        - Key: "Chapter"
          Value: "02"
        - Key: Certification
          Value: "DAE-C01"
  
  LambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub "dea-c01-data-transform-lambda-fn-${AWS::AccountId}"
      Description: Chapter 02 generic data processing function
      MemorySize: 128
      Timeout: 60
      Handler: index.handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        ZipFile: |
          def handler(event, context):
              return {
                  'statusCode': 200,
                  'body': 'Hello, World!'
              }
      Runtime: python3.12
      Tags:
        - Key: Project
          Value: "PacktPub"
        - Key: "Chapter"
          Value: "02"
        - Key: Certification
          Value: "DAE-C01"
          
  DynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub "dea-c01-data-table-${AWS::AccountId}"
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      Tags:
        - Key: Project
          Value: "PacktPub"
        - Key: "Chapter"
          Value: "02"
        - Key: Certification
          Value: "DAE-C01"